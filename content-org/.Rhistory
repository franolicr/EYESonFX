m$p$sgmnt[[1]]$name
m$o$ermny[ , unique( yr)]
m$p$lps
m$p$yrs
m$p$lps
m$p$msk
m$p$msk
which( m$p$msk %/% 1== 1]
which( m$p$msk %/% 1== 1)
m$p$msk %/% 1 == 1
m$p$msk %/% 1
1:length(m$p$msk) %/% 1
1:length(m$p$msk) %/% length( m$p$lps$lp)
1:length(m$p$msk) %/% length( m$p$lps$lp)== 0
fifelse( 1:length(m$p$msk) %/% length( m$p$lps$lp)== 0, "visible", "hidden")
m$p$sgmnts
m$p$sgmnt
m$p$sgmnt[[1]]
str( m$p$sgmnt[[1]])
m$p$sgmnts
m$p$sgmnt
str( m$p$sgmnt[[1]])
m$p$pnt
m$p$pnt[[1]]
str( m$p$pnt[[1]])
ifelse( 1:length(m$p$msk) %/% length( m$p$lps$lp)== 0,
                                                  "visible", "hidden")
animValue(
                                       x= ifelse( 1:length(m$p$msk) %/% length( m$p$lps$lp)== 0,
                                                  "visible", "hidden"))
animValue(
                                       x= ifelse( 1:length(m$p$msk) %/% length( m$p$lps$lp)== 0,
                                                  "visible", "hidden"), timeid= 1)
animValue(
                                       x= ifelse( 1:length(m$p$msk) %/% length( m$p$lps$lp)== 0,
                                                  "visible", "hidden"), timeid= 1, id= 1:160)
m$p$sgmnt
str( m$p$sgmnt[[1]])
m$p$pnts
m$p$pnts[[1]]
str( m$p$pnts[[1]])
m$p$pnts
m$p$pnts[[1]]
st( m$p$pnts[[1]])
str( m$p$pnts[[1]])
m$p$pnts[[1]]$id
m$p$pnt[[1]]
m$p$pnt[[1]]$x
?ifelse
animUnit(
                                       x= unit( ifelse( 1:length(m$p$msk) %/% length( m$p$lps$lp)== 0,
                                                  0.6, m$p$sgmnt[[1]]$x1), units= "native"))
animUnit(
                                       x= unit( ifelse( 1:length(m$p$msk) %/% length( m$p$lps$lp)== 0,
                                                  m$p$sgmnt[[1]]$x1, 0.6), units= "native"), id= 1:160)
m$p$yrs
i
length( m$p$yrs)
1:length(m$p$msk) %/% length( m$p$lps$lp)== i
1:length(m$p$msk) %/% length( m$p$lps$lp)== 8
1:length(m$p$msk) %/% length( m$p$lps$lp)== 7
i
1:length(m$p$msk) %/% length( m$p$lps$lp)== 7
1:length(m$p$msk) %/% length( m$p$lps$lp)== 9
1:length(m$p$msk) %/% length( m$p$lps$lp)== 1
1:length(m$p$msk) %/% length( m$p$lps$lp)== 0
1:length(m$p$msk) %/% length( m$p$lps$lp)== 0 | 1:length(m$p$msk) %% length( m$p$lps$lp)== 0 
1:length(m$p$msk) %/% ( 1+ length( m$p$lps$lp))== 0 
1:length(m$p$msk) %/% ( 1+ length( m$p$lps$lp))== 1
1:length(m$p$msk) %/% ( 1+ length( m$p$lps$lp))== 9
1:16
1:16 + 16 * i
i = 0
1:16 + 16 * i
1:16 + 16 * 2
1:16 + 16 * 1
animValue(
                                       x= ifelse( 1:length(m$p$msk) == 1:length( m$p$yrs) + length( m$p$yrs) * i,
                                                  "visible", "hidden"), id= 1:160)
animValue(
                                       x= ifelse( 1:length(m$p$msk) == 1:length( m$p$yrs) + length( m$p$yrs) * i,
                                                  "visible", "hidden"), id= 1:160)
i
animValue(
                                       x= ifelse( 1:length(m$p$msk) == 1:length( m$p$yrs) + length( m$p$yrs) * i,
                                                  "visible", "hidden"), id= 1:160)
animValue(

animValue(
                                       x= ifelse( 1:length(m$p$msk) == ( 1:length( m$p$yrs) + length( m$p$yrs) * i),
                                                  "visible", "hidden"), id= 1:160)
 1:length(m$p$msk) == ( 1:length( m$p$yrs) + length( m$p$yrs) * i)
i
  ( 1:length( m$p$yrs) + length( m$p$yrs) * i)
  ( 1:length( m$p$lps$lp) + length( m$p$lps$lp) * i)
  1:length(m$p$msk) == ( 1:length( m$p$lps$lp) + length( m$p$lps$lp) * i)
  1:length(m$p$msk) == ( 1:length( m$p$lps$lp) + length( m$p$lps$lp) * 8)
  1:length(m$p$msk) == ( 1:length( m$p$lps$lp) + length( m$p$lps$lp) * 7)
animValue(
                                           x= ifelse( 1:length(m$p$msk) ==
                                                      ( 1:length( m$p$lps$lp) + length( m$p$lps$lp) * i),
                                                  "visible", "hidden"), id= 1:160)
i
animValue(
                                           x= ifelse( 1:length(m$p$msk) ==
                                                      ( 1:length( m$p$lps$lp) + length( m$p$lps$lp) * i),
                                                  "visible", "hidden"), id= 1:160)
m$o$ermny
1:length(m$p$msk) ==
                                                      ( 1:length( m$p$lps$lp) + length( m$p$lps$lp) * i
)
1:length(m$p$msk) ==
                                                      ( 1:length( m$p$lps$lp) + length( m$p$lps$lp) * i)
1:length(m$p$msk) %in%
                                                      ( 1:length( m$p$lps$lp) + length( m$p$lps$lp) * i)
1:length(m$p$msk) %in%
                                                      ( 1:length( m$p$lps$lp) + length( m$p$lps$lp) * 0)
animUnit(
                                       x= unit( c( rep( 0.6, 160),
                                                  ifelse( 1:length(m$p$msk) %in%
                                                      ( 1:length( m$p$lps$lp) + length( m$p$lps$lp) * i),
                                                      m$p$sgmnt[[1]]$x1, 0.6)), units= "native"),
                                       id= rep( 1:160, 2), timeid= rep( c( 1, 2), 160))
animUnit(
                                       x= unit( c( rep( 0.6, 160),
                                                  ifelse( 1:length(m$p$msk) %in%
                                                      ( 1:length( m$p$lps$lp) + length( m$p$lps$lp) * i),
                                                      m$p$sgmnt[[1]]$x1, 0.6)), units= "native"),
                                       id= rep( 1:160, 2), timeid= rep( c( 1, 2), 160))
animUnit(
                                       x= unit( c( rep( 0.6, 160),
                                                  ifelse( 1:length(m$p$msk) %in%
                                                      ( 1:length( m$p$lps$lp) + length( m$p$lps$lp) * i),
                                                      m$p$sgmnt[[1]]$x1, 0.6)), units= "native"),
                                       id= rep( 1:160, 2), timeid= rep( c( 1, 2), each= 160))
animUnit(
                                       x= unit( c( rep( 0.6, 160),
                                                  ifelse( 1:length(m$p$msk) %in%
                                                      ( 1:length( m$p$lps$lp) + length( m$p$lps$lp) * i),
                                                      m$p$sgmnt[[1]]$x1, 0.6)), units= "native"),
                                       id= rep( 1:160, 2), timeid= rep( c( 1, 2), each= 160))
animUnit(
                                       x= unit( c( rep( 0.6, 160),
                                                  ifelse( 1:length(m$p$msk) %in%
                                                      ( 1:length( m$p$lps$lp) + length( m$p$lps$lp) * i),
                                                      m$p$sgmnt[[1]]$x1, 0.6)), units= "native"),
                                       id= rep( 1:160, 2))
grid.ls( flatten= TRUE, print= FALSE)$name, value= TRUE)
grid.ls( flatten= TRUE, print= FALSE)$name
m$p$sgmnt
m$p$sgmnt[[1]]
m$o$ermny
m$o$ermny[ , min( shr)]
m$o$ermny[ , min( shr_x)]
m$o$ermny[ , max( shr_x)]
m$p$sgmnt[[1]]$xo
m$p$sgmnt[[1]]$x0
m$p$sgmnt[[1]]$x1
c( rep( m$p$sgmnt[[1]]$x0, 160),
                                                  ifelse( 1:length(m$p$msk) %in%
                                                      ( 1:length( m$p$lps$lp) + length( m$p$lps$lp) * i),
                                                      m$p$sgmnt[[1]]$x1, m$p$sgmnt[[1]]$x0))
dim( m$o$ermny)[1]
ani
?animValue
?grid.animate
length( m$p$lp)
grid.ls( flatten= TRUE, print= FALSE)$name
m$p$rnks
m$p$rnks
m$p$rnks[[1]]
m$p$rnks[[1]]$label
m$p$rnks[[2]]$label
m$p$rnks[[3]]$label
m$p$rnks[[2]]$label
m$p$rnks
m$p$rnks[[2]]$label
lapply( grep( "GRID.text", grid.ls( flatten= TRUE, print= FALSE)$name, value= TRUE), grid.get)[[3]]
str( lapply( grep( "GRID.text", grid.ls( flatten= TRUE, print= FALSE)$name, value= TRUE), grid.get)[[3]])
m$o$ermny[ , .N, lp]
m$p$lps
m$p$lps[ , lbl:= tstrsplit( x= lp, " ")[1]]
m$p$lps
m$p$lps
m$p$lps
m$o$ermny[ , .N, substring( lp, 1, 12)]
m$o$ermny[ , .N, substring( lp, 1, 15)]
m$o$ermny[ , .N, substring( lp, 1, 14)]
m$o$ermny[ , .N, substring( lp, 1, 15)]
m$o$ermny
m$o$ermny
m$o$ermny[ , min( yr)]
lapply( dev.list(), dev.off)
m$p$yr
m$p$yr[[1]]$label
m$p$yr[[1]]$label
m$p$yr
m$p$yrs
m$p$yrs== m$p$yrs[ i+1]
m$o$yr_txts[[1]]$name
m$p$yr_txts
m$p$yr_txts[[1]]
m$p$yr_txts[[1]]$x
m$p$yrs
animValue(
                                       x=  ifelse( m$p$yrs== m$p$yrs[ i+1],
                                                      "visible", "hidden"))
getwd()
lapply( dev.list(), dev.off)
grid.ls()
grid.force()
grid.ls()
grid.ls( flatten= TRUE, print= FALSE)$name
i
i
m$p$ctgrs
i
i <- 15
grid.ls()
getwd()
setwd( "~/eyesonfx/content-org/")
m$f$sv_svg( "~/eyesonfx/content/whats_in_a_name.svg")
m$p$ctgrs
m$f$sv_svg( "~/eyesonfx/content/whats_in_a_name.svg")
class( venn.plot)
venn.plot
?draw.quad.venn
venn.plot
grid.draw( venn.plot)
quartz()
grid.draw( venn.plot)
warnings()
grid.draw( venn.plot)
?grid.draw
m$p$ctgrs
>
 ?draw.quad.venn
 ?draw.quad.venn
m$p$ctgrs
m$p$ctgrs
length( m$p$lbls)
i
m$p$sqnc
m$p$sqnc
length( m$p$sqnc)
m$p$sqnc[(1+i):length( m$p$sqnc)]
i <- 1
m$p$sqnc[(1+i):length( m$p$sqnc)]
m$p$lbs[ m$p$sqnc[(1+i):length( m$p$sqnc)]]
m$p$lbls[ m$p$sqnc[(1+i):length( m$p$sqnc)]]
i <- 2
m$p$lbls[ m$p$sqnc[(1+i):length( m$p$sqnc)]]
i <- 3
m$p$sqnc[(1+i):length( m$p$sqnc)]
m$p$sqnc[(1+i):length( m$p$sqnc)]
i <-2
m$p$sqnc[(1+i):length( m$p$sqnc)]
m$p$sqnc
m$p$sqnc[ 2:3]
i
i
length( m$p$ctgrs)
length( m$p$sqnc
)
i
m$p$ctgrs
m$f$plt
m$f$plt
?grid.raster
gpar
?gpar
dev.off()
?gpar
?grid.rect
?gpar
?grid.roundrect
?grid.newpage
grid.newpage( gp= gpar( fill= "grey"))
gpar
gpar( fill= "grey")
grid.newpage()
length( tmp)
?draw.quad.venn
?draw.quad.venn
getwd()
m$i$ntwst
m$i$ntwst
getwsd()
getwd()
ls
list.dit()
list.dir()
dir.list()
m$i$brclys <- fread( input= '~/Downloads/data.csv')
brc <- fread( input= '~/Documents/HMRC/2015-2016/Barclays-20150101-20200130.csv')
m$i$brclys
m$i$ntwst
m$i$ntwst
m$i$ntw
m$i$ntwst
m$i$ntwst
m$i$ntwst
m$i$ntwst[ is.Date( Date)]
m$i$ntwst[ as.Date( Date)]
m$i$ntwst
m$i$ntwst[ , as.Date( Date)]
m$i$ntwst[ , .N, date]
m$i$ntwst[ , .N, Date]
m$i$ntwst[ , .N, Date][ , Date]
m$i$brclys
m$i$brclys
m$x
m$x[ ,.N, acnt]
m$x
m$x[ , .N, act]
m$x
m$x[ is.na( py), .( .N, min( dt), lst_dt= max( dt), amt= sum(  amt)), dsc][
+       order( abs( amt), decreasing= T)][ 1:50, .( amt, lst_dt, N, substring( dsc, 1, 50))]
m$x[ is.na( py), .( .N, min( dt), lst_dt= max( dt), amt= sum(  amt)), dsc][
+       order( abs( amt), decreasing= T)][ 1:50, .( amt, lst_dt, N, substring( dsc, 1, 50))]
m$x[ is.na( py), .( .N, min( dt), lst_dt= max( dt), amt= sum(  amt)), dsc][
+       order( abs( amt), decreasing= T)][ 1:50, .( amt, lst_dt, N, substring( dsc, 1, 50))]
m$x[ is.na( py), .( .N, min( dt), lst_dt= max( dt), amt= sum(  amt)), dsc][
+       order( abs( amt), decreasing= T)][ 1:50, .( amt, lst_dt, N, substring( dsc, 1, 50))]
m$x[ is.na( py), .( .N, min( dt), lst_dt= max( dt), amt= sum(  amt)), dsc][
+       order( abs( amt), decreasing= T)][ 1:50, .( amt, lst_dt, N, substring( dsc, 1, 50))]
m$x[ is.na( py), .( .N, min( dt), lst_dt= max( dt), amt= sum(  amt)), dsc][
+       order( abs( amt), decreasing= T)][ 1:50, .( amt, lst_dt, N, substring( dsc, 1, 50))]
m$x[ is.na( py), .( .N, min( dt), lst_dt= max( dt), amt= sum(  amt)), dsc][
+       order( abs( amt), decreasing= T)][ 1:50, .( amt, lst_dt, N, substring( dsc, 1, 50))]
m$x[ is.na( py), .( .N, min( dt), lst_dt= max( dt), amt= sum(  amt)), dsc][
+       order( abs( amt), decreasing= T)][ 1:50, .( amt, lst_dt, N, substring( dsc, 1, 50))]
m$x[ is.na( py), .( .N, min( dt), lst_dt= max( dt), amt= sum(  amt)), dsc][
+       order( abs( amt), decreasing= T)][ 1:50, .( amt, lst_dt, N, substring( dsc, 1, 50))]
m$x[ is.na( py), .( .N, min( dt), lst_dt= max( dt), amt= sum(  amt)), dsc][
+       order( abs( amt), decreasing= T)][ 1:50, .( amt, lst_dt, N, substring( dsc, 1, 50))]
m$x[ is.na( py), .( .N, min( dt), lst_dt= max( dt), amt= sum(  amt)), dsc][
+       order( abs( amt), decreasing= T)][ 1:50, .( amt, lst_dt, N, substring( dsc, 1, 50))]
m$x[ is.na( py), .( .N, min( dt), lst_dt= max( dt), amt= sum(  amt)), dsc][
+       order( abs( amt), decreasing= T)][ 1:50, .( amt, lst_dt, N, substring( dsc, 1, 50))]
m$x[ is.na( py), .( .N, min( dt), lst_dt= max( dt), amt= sum(  amt)), dsc][
+       order( abs( amt), decreasing= T)][ 1:50, .( amt, lst_dt, N, substring( dsc, 1, 50))]
m$x[ is.na( py), .( .N, min( dt), lst_dt= max( dt), amt= sum(  amt)), dsc][
+       order( abs( amt), decreasing= T)][ 1:50, .( amt, lst_dt, N, substring( dsc, 1, 50))]
m$o[ , sum( amt), ctg]
m$o[ , sum( abs( amt)), ctg]
m$o[ , sum( abs( amt)), ctg][ order( -amt)]
m$o[ , .( amt= sum( abs( amt))), ctg][ order( -amt)]
m$o[ , .( amt= sum( abs( amt))), ctg][ order( -amt)][ , ctg]
m$x[ is.na( py), .( .N, min( dt), lst_dt= max( dt), amt= sum(  amt)), dsc][
+       order( abs( amt), decreasing= T)][ 1:50, .( amt, lst_dt, N, substring( dsc, 1, 50))]
m$x[ is.na( py), .( .N, min( dt), lst_dt= max( dt), amt= sum(  amt)), .( act, dsc)][
+       order( abs( amt), decreasing= T)][ 1:50, .( amt, lst_dt, N, act, substring( dsc, 1, 50))]
m$x[ is.na( py), .( .N, min( dt), lst_dt= max( dt), amt= sum(  amt)), .( act, dsc)][
+       order( abs( amt), decreasing= T)][ 1:50, .( amt, lst_dt, N, act, substring( dsc, 1, 40))]
m$x[ is.na( py), .( .N, min( dt), lst_dt= max( dt), amt= sum(  amt)), .( act, dsc)][
+       order( abs( amt), decreasing= T)][ 1:50, .( amt, lst_dt, N, act, substring( dsc, 1, 35))]
m$x[ is.na( py), .( .N, min( dt), lst_dt= max( dt), amt= sum(  amt)), .( bnk, dsc)][

+       order( abs( amt), decreasing= T)][ 1:50, .( amt, lst_dt, N, bnk, substring( dsc, 1, 35))]

+       order( abs( amt), decreasing= T)][ 1:50, .( amt, lst_dt, N, bnk, substring( dsc, 1, 40))]
m$x[ is.na( py), .( .N, min( dt), lst_dt= max( dt), amt= sum(  amt)), .( bnk, dsc)][
order( abs( amt), decreasing= T)][ 1:50, .( amt, lst_dt, N, bnk, substring( dsc, 1, 40))]
m$o[ is.na( ctg) & yr== 2019]
m$o[ is.na( ctg) & year( dt)== 2019]
m$o[ is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk= "brclys", is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk= "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ grepl( "FEWO", dsc)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)][1:50]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)][1:50]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( amt)][1:50]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( dsc)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( dsc)]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( dsc)][1:100]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( dsc)][1:100]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( dsc)][1:100]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( dsc)][1:100]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( dsc)][1:100]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( dsc)][1:200]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( dsc)][1:200]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( dsc)][1:200]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( dsc)][1:100]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( dsc)][100:200]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( dsc)][100:150]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( dsc)][100:150]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( dsc)][100:170]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( dsc)][100:200]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( dsc)][200:300]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( dsc)][200:300]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( dsc)][300:400]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( dsc)][300:400]
m$o[ bnk== "brclys" & is.na( ctg) & year( dt)== 2019][ order( dsc)]
m$o$cls
dcast( m$o$cls, formula= mnth ~ instrmnt)
m$o$cls
install.packages("rjson")
download.file( url= m$p$cboe_url, destfile= paste0( "/Dnk/Srcs/CBOE_FX/Extrct/CBOE_FX_", Sys.Date()))
?download.file
m$i$cboe_vlm
m$i$cboe_vlm
m$i$cboe_vlm
m$i$cboe_vlm
m$i$cboe_vlm[ , max( month), frq]
m$i$cboe_vlm[ frq== "monthly"]
m$i$cboe_vlm[ frq== "monthly",  .( month, mnth= as.Date( month, "%b-%Y"))][ , .N, mnth]
)]
m$i$cboe_vlm[ frq== "monthly",  .( month, mnth= as.Date( month, "%b-%Y"))]
m$i$cboe_vlm[ frq== "monthly",  .( month, mnth= as.Date( month, "%b-%Y"))]
m$i$cboe_vlm[ frq== "monthly",  .( month, mnth= as.yearmon( month, "%b-%Y"))]
m$i$cboe_vlm[ frq== "monthly",  .( month, mnth= as.Date( as.yearmon( month, "%b-%Y")))]
m$x$cboe
m$p$dtsch_mnth
m$p$dtsch_mnth
as.yearmon( Sys.date())
as.yearmon( Sys.Date())
m$p$dtsch_mnth
m$p$dtsch_mnth
m$p$dtsch_mnth
list.files()
pwd
getwd()
list.files( path= )
m$p$fl_pth
list.files( path= m$p$fl_path, full.names= TRUE)
list.files( path= "/Dnk/Srcs/Dtsch_Brs/Extrct/", full.names= TRUE)
list.files( path= m$p$fl_pth, full.names= TRUE)
m$i$Dtsch_Brs
)
m$x$EBS
Sys.date()
Sys.Date()
tmp
https://www.euronextfx.com/docs/Fastmatch_Daily_Volume_2020-04-11.xlsx?_=345
getwd()
setwd( /Dnk/Srcs/Ernxt_FX/Extrct)
setwd( "/Dnk/Srcs/Ernxt_FX/Extrct")
list.files()
read_excel( "Ernxt_2020-04-11.xls")
m$i$ernxt
m$i$ernxt
read_html( https://www.fxspotstream.com/volumes/)
read_html( "https://www.fxspotstream.com/volumes/")
read_table( read_html( "https://www.fxspotstream.com/volumes/"))
html_table( read_html( "https://www.fxspotstream.com/volumes/"))
rbindlist( lapply( html_table( read_html( "https://www.fxspotstream.com/volumes/")), as.data.table))
html_table( read_html( "https://www.fxspotstream.com/volumes/"))
m$i$FXSptStrm
m$i$FXSptStrm
m$i$FXSptStrm
m$i$FXSptStrm
m$x$FXSptStrm
html_table( read_html( "https://www.integral.com/ocx/")), as.data.table)
html_table( read_html( "https://www.integral.com/ocx/"))
m$i$OCX
m$i$OCX
m$x$OCX
m$i$OCX
m$i$OCX
m$x$OCX
m$p$rfntv_url
m$i$rfntv
m$i$rfntv
m$i$rfntv
m$x$rfnt
m$x$rfntv
getwd()
m$i$cboe_vlm
m$i$cboe_vlm
m$x$cboe_vlm
m$o$vns
m$x$vns
m$i$CBOE <- fread( file= "/Dnk/Srcs/CBOE_FX/Extrct/cboe_vlm.csv")
m$i$CBOE
m$x$CBOE
m$i$CBOE
m$x$CBOE
m$i$Dtsch_Brs <- fread( file= "/Dnk/Srcs/Dtsch_Brs//Extrct/Dtsch_Brs_vlm.csv")
m$i$Dtsch_Brs
m$i$Dtsch_Brs[ , lapply( .SD, class)]
m$x$Dtsch_Brs
m$i$EBS
m$x$EBS
m$x$ernxt
m$i$ernxt <- fread( file= "/Dnk/Srcs/Ernxt_FX/Extrct/Ernxt_vlm.csv")
m$i$ernxt
m$x$ernxt
m$i$spt_strm <- fread( "/Dnk/Srcs/FX_Spt_Strm/Extrct/FX_Spt_Strm_Vlm.csv")
m$i$spt_strm
m$i$spt_strm
m$x$spt_strm
m$x$spt_strm
fwrite( x= m$x$OCX, file= "/Dnk/Srcs/Intgrl_OCX/Extrct/OCX_vlm.csv"))
m$i$intgrl
m$x$intgrl
m$i$intgrl
fread( file= "/Dnk/Srcs/Rfntv/Extrct/rfntv_vlm.csv")
m$i$rfntv
m$x$rfntv
m$x$CLS
m$i$vns
m$o$vns
m$o$vns
m$o$vns[ , .N, vn]
m$x$vns
m$x$vns[ , .N, vn]
m$x$vns
m$x$CBOE
m$x$EBS
m$x$EBS[ , lapply( .SD, class)] 
m$o$vns
m$o$vns
m$o$vns[ , .N, vn_nm]
m$o$plt1
m$o$vns
getwd()
m$o$vns
m$o$vns[ max( mnth)]
m$o$vns[ ,max( mnth)]
m$o$vns[ ,max( mnth), vn_nm]
m$o$vns[ vn== "Refinitiv"]
m$o$vns[ vn_nm== "Refinitiv"]
paste0( "Monthly Average daily spot volume ($ billions) to ",
                      strptime( m$o$vns[ , max( mnth)], "%b %Y")
)
m$o$vns[ , max( mnth)]
paste0( "Monthly Average daily spot volume ($ billions) to ",
                      strftime( m$o$vns[ , max( mnth)], "%b %Y"))
paste0( "Monthly Average daily spot volume ($ billions) to ",
                      strftime( m$o$vns[ , max( mnth)], "%b %Y"))
m$p$tx2
m$p$txt2
m$p$txt2[[2]]
m$p$txt2[[2]]$label
m$p$txt2[[2]]$label
m$p$txt2[[1]]$label
m$p$txt2[[3]]$label
m$p$txt2[[3]]$col
m$p$txt2[[3]]$gp
m$p$txt2[[2]]$gp
m$p$txt2[[1]]$gp
m$o$vns[ , .( adj_adv, adv_shr, mnth, mx= max( mnth)) , vn_nm][
]
m$o$vns[ , .( adj_adv, adv_shr, mnth, mx= max( mnth)) , vn_nm][
				     mnth== mx]
m$p$txt1
m$p$txt1[[1]]$label
m$p$txt1[[2]]$label
m$p$txt1[[2]]$y
m$o$vns
m$o$vns[ , .N, vn]
m$o$vns$vn_nm
levels( m$o$vns$vn_nm0
)
levels( m$o$vns$vn_nm)
m$o$vns[ mnth== max( mnth)]
2.4 * 144
getwd()
)
getwd()
