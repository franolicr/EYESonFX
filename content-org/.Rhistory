 m$o$tr_fx[ tmp, roll= 1][ typ== 3]
 m$o$tr_fx[ tmp, roll= 1][ typ== 3][ , .( .N, N), tm]
 m$o$tr_fx[ tmp, roll= 1][ typ== 3][ , .( .N, N, tm), tm]
 m$o$tr_fx[ tmp, roll= 1][ typ== 3][ , .( .N, N), tm]
 m$o$tr_fx[ tmp, roll= 1][ typ== 2][ , .( .N, N), tm]
 m$o$tr_fx[ tmp, roll= 1][ typ== 1][ , .( .N, N), tm]
 m$o$tr_fx[ tmp, roll= 1][ typ== 1][ , .( .N, N, tm), tm]
 m$o$tr_fx[ tmp, roll= 1][ typ== 1][ , .( .N, N, .I, tm= tm + .I- .N), tm]
 m$o$tr_fx[ tmp, roll= 1][ typ== 1][ , .( .N, N, tm= tm + .I- .N), .( grp= tm)]
 m$o$tr_fx[ tmp, roll= 1][ typ== 1][ , .( .N, N, tm= tm + (.I- min( .I))/ .N * 1/100, .( grp= tm)]
 m$o$tr_fx[ tmp, roll= 1][ typ== 1][ , .( .N, N, tm= tm + 1/100 * (.I- min( .I))/ .N), .( grp= tm)]
 m$o$tr_fx[ tmp, roll= 1][ typ== 3][ , .( .N, N, tm= tm + 1/100 * (.I- min( .I))/ .N), .( grp= tm)]
m$o$tr_fx[ tmp, roll= TRUE][ , .( .N, N, tm= tm + 1/100 * (.I- min( .I))/ .N), .( typ, grp= tm)]
m$o$scld_tr_fx
m$o$tr_fx
m$o$tr_fx[ , .N, typ]
m$o$tr_fx[ , .( N= N * .N/ 120), typ]
m$o$scld_tr_fx
m$o$tr_fx
m$o$scld_tr_fx
m$o$tr_fx
m$o$scld_tr_fx
m$o$scld_tr_fx
m$o$scld_tr_fx
m$f$plt
grid.ls( flatten= TRUE, print= FALSE)$name
m$p$ln
m$p$rbns
m$p$rbns
m$p$rbns
m$p$pl
grid.ls( flatten= TRUE, print= FALSE)$name
m$p$pl
m$p$plygns
grid.ls( flatten= TRUE, print= FALSE)$name
m$p$ln
m$p$lns
m$p$lns[2:]
m$p$lns[2:5]
)
m$p$lns[2:5]
m$p$lns
class( m$p$lns[2:5])
grid.ls( flatten= TRUE, print= FALSE)$name
m$p$rbns
m$p$rbns[[2]]
str(m$p$rbns[[2]])
m$p$rbns[[2]]$children
m$p$plygn
str( m$p$plygn[[1]])
str( m$p$plygns[[1]])
)
m$p$lns
m$p$lns
m$p$lns[[1]]
m$p$lns[[1]]$y
m$p$lns[[2]]$y
m$p$lns[[3]]$y
m$p$plygns[[3]]$y
m$p$lns
m$p$plygns
i
unit( c( m$p$lns[[i-1]]$y, m$p$lns[[i]]$y), unit= "native")
120 * 4
m$f$sv_svg
fl= "catch_up_with_the_sun.svg"
grid.export( fl)
grid.export
lapply( m$p$lns, function( x) x$y)
lapply( m$p$lns, function( x) length( x$y))
m$o$scld_tr_fx
m$p$lns
m$p$lns[[1]]
m$p$lns[[1]]$x
m$p$lns[[1]]$y
m$p$lns[[1]]$x
qplot( x= m$p$lns[[1]]$x, y= m$p$lns[[1]]$y)
qplot( x= as.numeric( m$p$lns[[1]]$x), y= as.numeric( m$p$lns[[1]]$y))
qplot( x= as.numeric( m$p$lns[[1]]$x), y= as.numeric( m$p$lns[[1]]$y), geom= "line")
qplot( x= as.numeric( m$p$lns[[1]]$x), y= as.numeric( m$p$lns[[1]]$y), geom= "path")
qplot( x= as.numeric( m$p$lns[[1]]$x), y= as.numeric( m$p$plygns[[1]]$y), geom= "path")
qplot( x= as.numeric( m$p$plgns[[1]]$x), y= as.numeric( m$p$plygns[[1]]$y), geom= "path")
qplot( x= as.numeric( m$p$plygns[[1]]$x), y= as.numeric( m$p$plygns[[1]]$y), geom= "path")
qplot( x= as.numeric( m$p$lns[[2]]$x), y= as.numeric( m$p$lns[[2]]$y), geom= "path")
qplot( x= as.numeric( m$p$lns[[3]]$x), y= as.numeric( m$p$lns[[3]]$y), geom= "path")
qplot( x= as.numeric( m$p$lns[[4]]$x), y= as.numeric( m$p$lns[[4]]$y), geom= "path")
qplot( x= as.numeric( m$p$lns[[5]]$x), y= as.numeric( m$p$lns[[5]]$y), geom= "path")
qplot( x= as.numeric( m$p$lns[[5]]$x), y= as.numeric( m$p$lns[[5]]$y), geom= "line")
m$p$rbns[[1]]
m$p$rbns[[1]]$x
m$o$tr_fx
m$o$scld_tr_fx
m$p$lns[[1]]
str( m$p$lns[[1]])
m$p$lns[[1]]$id
m$p$lns[[2]]$id
m$p$lns[[3]]$id
lapply( dev.list(), dev.off)
?grid.animate
max( 1, 0)
m$o$scld_tr_fx
m$o$scld_tr_fx[ , .( tm= min( tm), lbl)]
m$o$scld_tr_fx[ , .( tm= min( tm), .( typ, lbl))]
m$o$scld_tr_fx[ , .( tm= min( tm)), .( typ, lbl))]
m$o$scld_tr_fx[ , .( tm= min( tm)), .( typ, lbl)]
m$o$tr_fx
m$o$scld_tr_fx
m$o$scld_tr_fx[ , max( N)]
1e9
1e98
m$p$lns2
m$p$lns
grid.ls( flatten= TRUE, print= FALSE)$name
m$p$sgmnt
m$p$sgmnt[[1]]
m$p$sgmnt[[1]]$x
m$p$sgmnt[[1]]$x0
m$o$scld_tr_fx[ , .( tm= min( tm)), .( typ, lbl)]
m$o$scld_tr_fx[ , .( tm= min( tm)), .( typ, lbl)]
m$p$sgmnt[[1]]$x0
unique(m$p$sgmnt[[1]]$x0)
unique(m$p$sgmnt[[1]]$x1)
unique(m$p$sgmnt[[1]]$y1)
unique(m$p$sgmnt[[1]]$y0
)
m$p$sgmnts
m$p$sgmnt
m$p$sgmnt <- NULL
m$p$sgmnt
m$p$sgmnts
m$p$sgmnts[[1]]
m$p$sgmnts[[1]]$x
m$p$sgmnts[[1]]$x0
m$p$sgmnts[[1]]$i
m$p$sgmnts[[1]]$id
str( m$p$sgmnts[[1]])
m$o$scld_tr_fx
m$o$scld_tr_fx[ , .N , .( typ, lbl)]
m$o$scld_tr_fx[ , .N , .( typ, lbl)][ , typ== i]
fifelse(
                     m$o$scld_tr_fx[ , .N , .( typ, lbl)][ , typ== i], "visible", "hidden")
fifelse(
                     m$o$scld_tr_fx[ , .N , .( typ, lbl)][ , typ== 1], "visible", "hidden")
m$p$sgmnts
m$p$sgmnts[[1]]$name
m$p$sgmnts[[1]]$x
m$p$sgmnts[[1]]$x0
animValue( fifelse(
                     m$o$scld_tr_fx[ , .N , .( typ, lbl)][ , typ== i], "visible", "hidden"))
grid.ls( flatten= TRUE, print= FALSE)$name
m$p$txts
m$p$txts[[1]]$gp
animValue( fifelse(
                     m$o$scld_tr_fx[ , .N , .( typ, lbl)][ , typ== i], "visible", "hidden"))
animValue( fifelse(
                     m$o$scld_tr_fx[ , .N , .( typ, lbl)][ , typ== i], "visible", "hidden"),
                     id= 1:length(m$p$sgnmnts[[1]]$x0)
)
m$o$scld_tr_fx
m$o$scld_tr_fx[ typ== 3]
1:length(m$p$sgmnts[[1]]$x0
)
1:length(m$p$sgmnts[[1]]$x0)
m$o$scld_tr_fx[ , .( tm= min( tm)), .( typ, grp)]
m$o$scld_tr_fx[ , .( tm= min( tm), lbl= min( lbl)), .( ty
m$o$scld_tr_fx
m$o$scld_tr_fx[ , .( tm= min( tm), lbl= min( lbl)), .( typ, grp)]
m$o$scld_tr_fx
m$o$scld_tr_fx[ , .( tm= min( tm)), .( typ, grp)]
m$o$scld_tr_fx
m$o$scld_tr_fx[ !is.na( clr)]
m$p$pnts
m$p$pnts[[1]]$x
m$p$pnts[[1]]$x
m$p$pnts[[1]]$y
m$p$pnts[[1]]$gp
str( m$p$pnts[[1]])
m$o$tr_fx[ !is.na( clr),
                                     .( tm1, N, clr, shp= fifelse( clr== m$p$clr$grn, 24, 25))]
m$o$scld_tr_fx[ !is.na( clr),

                                     .( tm1, N, clr, shp= fifelse( clr== m$p$clr$grn, 24, 25))]
m$o$scld_tr_fx[ !is.na( clr), .N , .( typ, grp)][ , typ== i]
m$p$hlds
m$p$hldys
m$p$hldys
m$p$hldys[ , .( sum( N), wk= mean( as.numeric( wk))), hldy][ , round( wk)]
m$p$hldys[ , .( sum( N), wk= mean( as.numeric( wk))), hldy][ , .( round( wk), "hldy")]
m$p$hldys[ , .( sum( N), wk= mean( as.numeric( wk))), hldy][ , .( round( wk), hldy)]
m$o$cmnts
m$o$cmnts
m$o$scld_tr_fx
m$o$cmnts
m$o$scld_tr_fx
]
m$o$cmnts
m$o$cmnts
]
m$o$cmnts
m$o$cmnts
m$o$tr_Fx
m$o$tr_fx
m$o$cmnts
grid.ls( flatten= TRUE, print= FALSE)$name
m$p$lbls
grid.ls( flatten= TRUE, print= FALSE)$name
m$p$Lbls
m$p$lbls
m$p$lbls[[1]]
str( m$p$lbls[[1]])
m$p$lbs
m$p$lbls
m$o$cmnts
m$p$lbls
grid.ls( flatten= TRUE, print= FALSE)$name
m$p$lbls <- lapply( grep( "box", grid.ls( flatten= TRUE, print= FALSE)$name, value= TRUE), grid.get)
m$p$lbls <- lapply( grep( "text", grid.ls( flatten= TRUE, print= FALSE)$name, value= TRUE), grid.get)
m$p$lbls
m$p$lbls[[1]]
m$p$lbls[[1]]
str(m$p$lbls[[1]])
grid.ls( flatten= TRUE, print= FALSE)$name
m$p$lbls <- lapply( grep( "text", grid.ls( flatten= TRUE, print= FALSE)$name, value= TRUE), grid.get)
m$p$lbls[[1]]
str(m$p$lbls[[1]])
str(m$p$lbls[[2]])
str(m$p$lbls[[3]])
str(m$p$lbls[[4]])
str(m$p$lbls[[5]])
str(m$p$lbls[[6]])
str(m$p$lbls[[7]])
str(m$p$lbls[[8]])
str(m$p$lbls[[10]])
str(m$p$lbls[[20]])
str(m$p$lbls[[30]])
str(m$p$lbls[[60]])
str(m$p$lbls[[90]])
str(m$p$lbls[[100]])
str(m$p$lbls[[90]])
str(m$p$lbls[[91]])
str(m$p$lbls[[92]])
str(m$p$lbls[[93]])
str(m$p$lbls[[94]])
str(m$p$lbls[[95]])
str(m$p$lbls[[99]])
str(m$p$lbls[[97]])
str(m$p$lbls[[96]])
m$o$scld_tr_fx[ !is.na( clr),
                                     .( typ, tm1, N, clr, cmnt)][
                                      order( typ, tm1)]
m$o$scld_tr_fx[ m$o$cmnt]
m$o$cmnt
m$o$cmnt
m$o$scld_tr_fx
m$o$cmnt
m$o$cmnts
m$o$cmnt <- NULL
m$o$cmnts
m$p$pnts
m$p$pnts
m$p$pnts
m$p$pnts[[1]]
m$p$pnts[[1]]$x
m$o$cmnts
m$o$cmnts
m$o$cmnts
m$o$cmnts
m$o$cmnts
m$p$pnts
m$p$lbls
grid.ls( flatten= TRUE, print= FALSE)$name
m$p$lbls
)
")
m$p$lbls[[1]]
str( m$p$lbls[[1]])
m$p$pnts <- lapply( grep( "geom_point", grid.ls( flatten= TRUE, print= FALSE)$name, value= TRUE), grid.get)

lapply( grep( "GRID.point", grid.ls( flatten= TRUE, print= FALSE)$name, value= TRUE), grid.get)

grid.ls( flatten= TRUE, print= FALSE)$name
m$p$Pnt
m$p$pnts
m$p$lbls
m$p$lbls
m$p$pnts
m$p$lbls
grid.ls( flatten= TRUE, print= FALSE)$name
?grid.animate
m$o$cmnts[ , cbind( .SD, shp= fifelse( m$o$cmnts$clr== m$p$clr$grn, 24, 25))]
grid.ls( flatten= TRUE, print= FALSE)$name
grid.ls( flatten= TRUE, print= FALSE)$name
m$p$lbls
?grid.animate
?lapply
m$p$lbls
names( m$p$lbls)
 m$p$lbls
lapply(  m$p$lbls, name)
lapply(  m$p$lbls, names)
lapply(  m$p$lbls, function( x) x$name)
sapply(  m$p$lbls, function( x) x$name)
m$p$lbls[[1]]$name
?which
which( m$p$lbls[[1]]$name== sapply(  m$p$lbls, function( x) x$name))
which( m$p$lbls[[3]]$name== sapply(  m$p$lbls, function( x) x$name))
m$p$lbs
m$p$lbls
m$o$cmnts[ cmnt!= "", cbind( .SD, shp= fifelse( m$o$cmnts$clr== m$p$clr$grn, 24, 25))]
m$o$cmnts
m$o$cmnts[ cmnt!= ""]
m$o$cmnts[ cmnt!= "", cbind( .SD, shp= fifelse( m$o$cmnts$clr== m$p$clr$grn, 24, 25))]
m$o$cmnts[ , cbind( .SD, shp= fifelse( m$o$cmnts$clr== m$p$clr$grn, 24, 25))][ cmnt!= ""]
m$p$lbls
m$p$lbls
grid.ls( flatten= TRUE, print= FALSE)$name
m$p$lbs
m$p$lbls
m$o$cmnts[ cmnt!= ""]$clr== m$p$clr$rd
m$o$cmnts[ cmnt!= ""]$clr== m$p$clr$rd * 0.05
sign( m$o$cmnts[ cmnt!= ""]$clr== m$p$clr$rd * 0.05)
sign( m$o$cmnts[ cmnt!= ""]$clr== m$p$clr$rd)
m$p$hldys
holidayLONDON( year= 2010:2019)
m$p$hlds
m$p$hldys
m$p$hldys
]
)
data.table( m$p$hldys[ , .( sum( N), wk= mean( as.numeric( wk))), hldy]
)
m$p$hldys[ , .( sum( N), wk, i= .I- min( .I)), hldy]
m$p$hldys
m$p$hldys
m$p$hldys
m$o$cmnts
m$o$cmnts
)
m$o$cmnts
m$p$lbls
m$o$cmnts
m$o$cmnts[ cmnt!= ""]
m$o$cmnts[ cmnt!= "", .N]
m$p$lbls[ -( 1+ m$o$cmnts[ cmnt!= "", .N])
))
m$p$lbls[ -( 1+ m$o$cmnts[ cmnt!= "", .N]
)[
]]
m$p$lbls[ 1:5 + m$o$cmnts[ cmnt!= "", .N]]
m$p$lbls[ -( 1+ m$o$cmnts[ cmnt!= "", .N]
)]
25 * 7/5
tmp <- fread( "~/Downloads/EURUSD-2020-03.csv")
tmp
tmp[ , V1:= fastPOSIXct( V2)]
tmp
tmp[ , class( V2)]
tmp <- fread( "~/Downloads/EURUSD-2020-03.csv")
tmp
  setnames( tmp, c( 'crnc', 'tm', 'bd', 'ofr'))
  # Convert time to POSIXct
  tmp[ , tm:= fastPOSIXct( paste( substr( tm, 1,4), '-', substr( tm, 5, 6), '-',
                                     substr( tm, 7, 8), ' ', substr( tm, 10, 21), sep= ''))] 

tmp[ , .N, minute( tm)]
tmp[ , .N, round_date( tm, "miunte")]
tmp[ , .N, round_date( tm, unit= "miunte")]
tmp[ , .N, round_date( tm, unit= "minute")]
tmp2 <- tmp[ , .N, .( dy= round_date( tm, "day"), mnt_of_dy= round_date( as.hms( tm), unit= "minute"))]
tmp2[ 1:100]
tmp[ 1:100][ , .N, as.hms( tm)]
tmp[ 1:100][ , .N, round_date( as.hms( tm), "minute")]
tmp[ 1:100][ , .N, round_time( as.hms( tm), "minute")]
tmp[ 1:100][ , .N, round( as.hms( tm), "minute")]
tmp[ 1:100][ , .N, round( as.hms( tm)/60, 0)]
tmp[ 1:100][ , .N, 60 * round( as.hms( tm)/60, 0)]
tmp[ 1:100][ , .N, as.hms( 60 * round( as.hms( tm)/60, 0))]
tmp2 <- tmp[ , .N, .( dy= as.Date( tm), mnt= as.hms( 60 * round( as.hms( tm)/60, 0)))]
tmp2
qplot( data= tmp2, x= mnt, y= N, geom= "line") + facet_wrap( facets= "dy", ncol= 6) 
qplot( data= tmp2, x= mnt, y= N, geom= "line") + facet_wrap( facets= "dy", ncol= 6) 
qplot( data= tmp2, x= mnt, y= N, geom= "line") + facet_wrap( facets= "dy", ncol= 6) + annotate( geom= "segment", x= as.hms( 16:00:00), xend= as.hms( 16:00:00), colour= "grey", alpha= 0.2, y= 0, yend= +Inf)
as.h
as.hms( "16:00:00")
qplot( data= tmp2, x= mnt, y= N, geom= "line") + facet_wrap( facets= "dy", ncol= 6) + annotate( geom= "segment", x= as.hms( 16:00:00), xend= as.hms( "16:00:00"), colour= "grey", alpha= 0.2, y= 0, yend= +Inf)
qplot( data= tmp2, x= mnt, y= N, geom= "line") + facet_wrap( facets= "dy", ncol= 6) + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), colour= "grey", alpha= 0.2, y= 0, yend= +Inf)
qplot( data= tmp2[ , .( N= sum( N)), mnt], x= mnt, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), colour= "grey", alpha= 0.2, y= 0, yend= +Inf)
qplot( data= tmp2[ , .( N= sum( N)),15* round( mnt/15)], x= mnt, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), colour= "grey", alpha= 0.2, y= 0, yend= +Inf)
qplot( data= tmp2[ , .( N= sum( N)), .( mnt= 15* round( mnt/15))], x= mnt, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), colour= "grey", alpha= 0.2, y= 0, yend= +Inf)
qplot( data= tmp2[ , .( N= sum( N)), .( mnt= as.hms( 15* round( mnt/15)))], x= mnt, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), colour= "grey", alpha= 0.2, y= 0, yend= +Inf)
quartz(); qplot( data= tmp2[ , .( N= sum( N)), .( mnt= as.hms( 15* round( mnt/15)))], x= mnt, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), colour= "grey", alpha= 0.2, y= 0, yend= +Inf)
tmp2
tmp2[ , class( mnt)]
tmp2[ , .( N= sum( N)), .( mnt= as.hms( 15* round( mnt/15)))]
quartz(); qplot( data= tmp2[ , .( N= sum( N)), .( mnt= as.hms( 15* round( mnt/15, 0)))], x= mnt, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), colour= "grey", alpha= 0.2, y= 0, yend= +Inf)
tmp2[ , .( N= sum( N)), .( mnt= as.hms( 15* round( mnt/15, 0)))]
quartz(); qplot( data= tmp2[ , .( N= sum( N)), .( mnt= as.hms( (60*15)* round( mnt/(60*15))))], x= mnt, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), colour= "grey", alpha= 0.2, y= 0, yend= +Inf)
?fastPOSIXct
?fastPOSIXct
m$i$tr_fx
m$p$fls
m$p$fls <- "/Users/rfranolic/Dnk/Srcs/Tr_FX/Smry//EURUSD.csv"
m$i$tr_fx
m$i$tr_fx[ , .N, as.hms( tm)]
qplot( data= m$i$tr_fx[ , .( N= sum( N)), .( tm= as.hms( tm))], x= tm, y= N) 
qplot( data= m$i$tr_fx[ , .( N= sum( N)), .( tm= as.hms( tm))], x= tm, y= N, geom= "line") + scale_x_time( breaks= 1:24)
qplot( data= m$i$tr_fx[ , .( N= sum( N)), .( tm= as.hms( tm))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xed= as.hms( "16:00:00"), y= 0, yend= +Inf)
qplot( data= m$i$tr_fx[ , .( N= sum( N)), .( tm= as.hms( tm))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf)
qplot( data= m$i$tr_fx[ , .( N= sum( N)), .( tm= as.hms( tm))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, alpha= "grey")
qplot( data= m$i$tr_fx[ , .( N= sum( N)), .( tm= as.hms( tm))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, alpha= "grey") + scale_x_time( breaks= "1 hour")
qplot( data= m$i$tr_fx[ , .( N= sum( N)), .( tm= as.hms( tm))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "grey") + scale_x_time( breaks= "1 hour")
qplot( data= m$i$tr_fx[ , .( N= sum( N)), .( tm= as.hms( tm))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "grey") + scale_x_datetime( breaks= "1 hour")
qplot( data= m$i$tr_fx[ , .( N= sum( N)), .( tm= as.hms( tm))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "grey") + scale_x_time( breaks= "1 hour")
?scale_x_time
qplot( data= m$i$tr_fx[ , .( N= sum( N)), .( tm= as.hms( tm))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "grey") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60)))
qplot( data= m$i$tr_fx[ , .( N= sum( N)), .( tm= as.hms( tm))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "grey") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60))
qplot( data= m$i$tr_fx[ , .( N= sum( N)), .( tm= as.hms( tm))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60))
qplot( data= m$i$tr_fx[ , .( N= sum( N)), .( tm= as.hms( tm))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 23))
qplot( data= m$i$tr_fx[ , .( N= sum( N)), .( tm= as.hms( tm))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24))
qplot( data= m$i$tr_fx[ , .( N= sum( N)), .( tm= as.hms( tm), yr= year( tm))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
qplot( data= m$i$tr_fx[ , .( N= sum( N)), .( tm= as.hms( tm), yr= month(tm) %in% c( 4, 5, 6, 7, 8, 9)], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
qplot( data= m$i$tr_fx[ , .( N= sum( N)), .( tm= as.hms( tm), yr= month(tm) %in% c( 4, 5, 6, 7, 8, 9))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
Sys.time()
qplot( data= m$i$tr_fx[ year( tm)= 2019 & month( tm)= 7, .( N= sum( N)), .( tm= as.hms( tm), yr= month(tm) %in% c( 4, 5, 6, 7, 8, 9))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
qplot( data= m$i$tr_fx[ year( tm)== 2019 & month( tm)== 7, .( N= sum( N)), .( tm= as.hms( tm), yr= month(tm) %in% c( 4, 5, 6, 7, 8, 9))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
qplot( data= m$i$tr_fx[ year( tm)== 2019 & month( tm)== 8, .( N= sum( N)), .( tm= as.hms( tm), yr= month(tm) %in% c( 4, 5, 6, 7, 8, 9))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
qplot( data= m$i$tr_fx[ year( tm)== 2019 & month( tm)== 9, .( N= sum( N)), .( tm= as.hms( tm), yr= month(tm) %in% c( 4, 5, 6, 7, 8, 9))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
qplot( data= m$i$tr_fx[ year( tm)== 2019 & month( tm)== 3, .( N= sum( N)), .( tm= as.hms( tm), yr= month(tm) %in% c( 4, 5, 6, 7, 8, 9))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
qplot( data= m$i$tr_fx[ year( tm)== 2019 & month( tm)== 2, .( N= sum( N)), .( tm= as.hms( tm), yr= month(tm) %in% c( 4, 5, 6, 7, 8, 9))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
qplot( data= m$i$tr_fx[ year( tm)== 2019 & month( tm)== 1, .( N= sum( N)), .( tm= as.hms( tm), yr= month(tm) %in% c( 4, 5, 6, 7, 8, 9))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
qplot( data= m$i$tr_fx[ year( tm)== 2019, .( N= sum( N)), .( tm= as.hms( tm), yr= month(tm) %in% c( 4, 5, 6, 7, 8, 9))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
qplot( data= m$i$tr_fx[ year( tm)== 2018, .( N= sum( N)), .( tm= as.hms( tm), yr= month(tm) %in% c( 4, 5, 6, 7, 8, 9))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
tmp <- fread( "~/Downloads/EURUSD-2020-03.csv")
tmp
  setnames( tmp, c( 'crnc', 'tm', 'bd', 'ofr'))
  # Convert time to POSIXct
  tmp[ , tm:= fastPOSIXct( paste( substr( tm, 1,4), '-', substr( tm, 5, 6), '-',
                                     substr( tm, 7, 8), ' ', substr( tm, 10, 21), sep= ''))] 

tmp[ , timezone( tm)]
?timezone
  setnames( tmp, c( 'crnc', 'tm', 'bd', 'ofr'))
  # Convert time to POSIXct
  tmp[ , tm:= fastPOSIXct( paste( substr( tm, 1,4), '-', substr( tm, 5, 6), '-',
                                     substr( tm, 7, 8), ' ', substr( tm, 10, 21), sep= ''), tz= "GMT")] 
  setnames( tmp, c( 'crnc', 'tm', 'bd', 'ofr'))
  # Convert time to POSIXct
  tmp[ , tm:= fastPOSIXct( paste( substr( tm, 1,4), '-', substr( tm, 5, 6), '-',
                                     substr( tm, 7, 8), ' ', substr( tm, 10, 21), sep= ''), tz= "GMT")] 
tmp <- fread( "~/Downloads/EURUSD-2020-03.csv")
tmp[ , `:=`( dy= substr( tm, 1, 8), tm= substr( tm, 10, 21))]
  setnames( tmp, c( 'crnc', 'tm', 'bd', 'ofr'))
  # Convert time to POSIXct

tmp[ , `:=`( dy= substr( tm, 1, 8), tm= substr( tm, 10, 21))]
tmp
qplot( data= tmp[ , .( N= .N), .( tm= substr( tm, 1, 5), dy), x= tm, y= N) + facet_wrap( "dy")
qplot( data= tmp[ , .( N= .N), .( tm= substr( tm, 1, 5), dy)], x= tm, y= N) + facet_wrap( "dy")
tmp[ , .( N= .N), .( tm= substr( tm, 1, 5), dy)]
tmp[ , .( N= .N), .( tm= as.hms( substr( tm, 1, 5)), dy)]
  setnames( tmp, c( 'crnc', 'tm', 'bd', 'ofr'))
  # Convert time to POSIXct
  tmp[ , tm:= fastPOSIXct( paste( substr( tm, 1,4), '-', substr( tm, 5, 6), '-',
                                     substr( tm, 7, 8), ' ', substr( tm, 10, 21), sep= ''), tz= "GMT")] 
tmp2 <- tmp[ , .N, .( dy= as.Date( tm), mnt= as.hms( 60 * round( as.hms( tm)/60, 0)))]
tmp2
tmp
tmp <- fread( "~/Downloads/EURUSD-2020-03.csv")
  setnames( tmp, c( 'crnc', 'tm', 'bd', 'ofr'))
  # Convert time to POSIXct
  tmp[ , tm:= fastPOSIXct( paste( substr( tm, 1,4), '-', substr( tm, 5, 6), '-',
                                     substr( tm, 7, 8), ' ', substr( tm, 10, 21), sep= ''), tz= "GMT")] 
tmp
tmp2 <- tmp[ , .N, .( dy= as.Date( tm), mnt= as.hms( 60 * round( as.hms( tm)/60, 0)))]
tmp2
qplot( data= tmp2, .( tm= as.hms( tm), yr= day(tm) >29], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
qplot( data= tmp2, .( tm= as.hms( tm)), yr= day(tm) >29], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
qplot( data= tmp2, .( tm= as.hms( tm)), .( yr= day(tm) >29)], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
qplot( data= tmp2[ .( tm= as.hms( tm)), .( yr= day(tm) >29)], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
qplot( data= tmp2[ .( tm= as.hms( tm)), .( yr= day(tm) >29)], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
tmp2
qplot( data= tmp2[ .( tm= mnt), .( yr= day(dy) >29)], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
qplot( data= tmp2[, .( tm= mnt), .( yr= day(dy) >29)], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
tmp2[, .( tm= mnt), .( yr= day(dy) >29)]
qplot( data= tmp2[, .( N= sum( N)).( tm= mnt, yr= day(dy) >29)], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
qplot( data= tmp2[, .( N= sum( N)), .( tm= mnt, yr= day(dy) >29)], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
qplot( data= tmp2[, .( N= mean( N)), .( tm= mnt, yr= day(dy) >29)], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
tmp
tmp
tmp[ , .N, as.hms( 60 * round(as.hms( tm)/60))]
tmp[ , .N, as.hms( 60 * round(as.hms( tm)/60))][ order( -N)]
tmp[ , .N, .( as.Date( tm), as.hms( 60 * round(as.hms( tm)/60)))][ order( -N)]
tmp[ , .N, .( day( tm)> 29, as.hms( 60 * round(as.hms( tm)/60)))][ order( -N)]
tmp[ , .N, .( day( tm)> 29, as.hms( 60 * round(as.hms( tm)/60)))][ order( -N)][ day== TRUE]
?as.h,s
?as.hms
tmp[ , .N, .( day( tm)> 29, as_hms( 60 * round(as_hms( tm)/60)))][ order( -N)][ day== TRUE]
tmp[ , .N, .( day( tm)> 29, as_hms( 60 * round(as_hms( tm)/60)))][ order( -N)][ day== FALSE]
tmp
tmp <- fread( "~/Downloads/EURUSD-2020-03.csv")
tmp
tmp[ , `:=` (dy= substr( V2, 1, 8), tm= substr( V2, 10, 14)]
tmp[ , `:=` (dy= substr( V2, 1, 8), tm= substr( V2, 10, 14))]
tmp
tmp[ , .N, tm][order( -N)]
tmp[ , .N, .( tm, dy > 20200329][order( -N)]
tmp[ , .N, .( tm, dy > 20200329)][order( -N)]
tmp[ , .N, .( tm, dy > 20200329)][order( -N)][ dy== TRUE]
qplot( data= m$i$tr_fx[ year( tm)== 2018, .( N= sum( N)), .( tm= as.hms( tm), yr= month(tm) %in% c( 4, 5, 6, 7, 8, 9))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
qplot( data= m$i$tr_fx[ , .( N= sum( N)), .( tm= as.hms( tm), yr= month(tm) %in% c( 4, 5, 6, 7, 8, 9))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as.hms( "16:00:00"), xend= as.hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
qplot( data= m$i$tr_fx[ , .( N= sum( N)), .( tm= as.hms( tm), yr= month(tm) %in% c( 4, 5, 6, 7, 8, 9))], x= tm, y= N, geom= "line") + annotate( geom= "segment", x= as_hms( "16:00:00"), xend= as_hms( "16:00:00"), y= 0, yend= +Inf, alpha= 0.2, colour= "red") + scale_x_time( breaks= seq( 0, 60 * 60 * 24, by= 60 * 60), labels= seq( 0, 24)) + facet_wrap( "yr")
?hour
m$x$tr_fx$dly
m$x$tr_fx$dly[ , sum( N)]
m$x$tr_fx$mnt;y[ , sum(N)]
m$x$tr_fx$mntly[ , sum(N)]
tmp
tmp2
tmp2[ , .sum( N)]
tmp2[ , .( sum( N))]
tmp2[ , .( sum( N))] * 10
tmp2[ , .( sum( N))] * 10 * 12
